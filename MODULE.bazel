module(
    name = "gcc_toolchain",
)

bazel_dep(name = "bazel_skylib", version = "1.7.1")
bazel_dep(name = "rules_pkg", version = "1.1.0")
bazel_dep(name = "aspect_bazel_lib", version = "2.15.3")
bazel_dep(name = "rules_foreign_cc", version = "0.14.0")
bazel_dep(name = "rules_cc", version = "0.1.1")
bazel_dep(name = "rules_proto", version = "7.1.0")
bazel_dep(name = "platforms", version = "0.0.11")

#gcc_toolchains = use_extension("//toolchain:defs.bzl", "gcc_toolchains")

#gcc_toolchains.toolchain(
#    name = "gcc_toolchain_aarch64",
#    target_arch = "aarch64",
#)

#gcc_toolchains.toolchain(
#    name = "gcc_toolchain_armv7",
#    target_arch = "armv7",
#)

#gcc_toolchains.toolchain(
#    name = "gcc_toolchain_x86_64",
#    sysroot_variant = "x86_64-X11",
#    target_arch = "x86_64",
#)

#use_repo(gcc_toolchains, "gcc_toolchain_x86_64", "gcc_toolchain_armv7", "gcc_toolchain_aarch64")

#register_toolchains(
#    "@gcc_toolchain_x86_64//:cc_toolchain",
#    "@gcc_toolchain_armv7//:cc_toolchain",
#    "@gcc_toolchain_aarch64//:cc_toolchain",
#    "@gcc_toolchain_x86_64//:fortran_toolchain",
#    "@gcc_toolchain_armv7//:fortran_toolchain",
#    "@gcc_toolchain_aarch64//:fortran_toolchain",
#)

#internal = use_extension("//:internal.bzl", "internal_deps")

#use_repo(internal, "avl")
#use_repo(internal, "lapack")
#use_repo(internal, "openssl")
